package org.example;

import java.util.Arrays;

public class JPTV23Task4 {
    public static void main(String[] args) { //точка входа в программу
        int[] numbers = new int[100]; //Объявляется массив array целых чисел (int[]),
        // состоящий из 100 элементов.
        // Изначально все элементы массива инициализированы нулями.
        for (int i = 0; i < numbers.length; i++) { //Цикл for, который проходит по всем элементам массива от 0 до 99 (всего 100 итераций).
            // Переменная i используется как индекс массива.
            int randomNumber = (int) (Math.random() * 51) * 2 + 1; //здесь генерируется случайное нечётное число.
            //Math.random() возвращает случайное число от 0.0 до 1.0.
            //Умножение на 51 генерирует случайное число в диапазоне от 0 до 50.9999...
            //Приведение к целому типу (int) отбрасывает дробную часть.
            //Умножение на 2 делает число чётным.
            //Добавление 1 превращает его в нечётное (например, 0 превращается в 1, 2 в 3 и т.д.).
            numbers[i] = randomNumber; //Случайное нечётное число сохраняется в массиве array на позиции с индексом i.
        }
        for (int i = 0; i < numbers.length; i++) { //Этот цикл for проходит по всем элементам массива numbers.
            System.out.printf("%-4d", numbers[i]); //Эта строка выводит элемент массива numbers[i] на экран с помощью метода printf
            //%-4d — это формат для вывода целого числа (d означает, что это целое число).
            //- означает выравнивание числа по левому краю.
            //4 означает, что отводится 4 символа под вывод числа
            //Например, если numbers[i] равно 5, то на экране выведется 5 с отступом в 4 символа
            if ((i + 1) % 10 == 0) { //Этот блок проверяет, является ли текущее значение индекса i + 1 кратным 10.
                //% 10 — это оператор остатка от деления. Он проверяет, кратно ли число 10 (т.е. делится ли оно на 10 без остатка).
                //== 0 — если остаток от деления равен нулю, это значит, что прошло ровно 10 элементов (например, 10, 20, 30 и т.д.).
                System.out.println(); //Эта строка выводит новую строку (переход на следующую строку).
            }
        }


        Arrays.sort(numbers); //Метод Arrays.sort() сортирует массив array по возрастанию.
        double sum = 0; //Объявляется переменная sum типа double, которая будет хранить сумму всех элементов массива.
        for (int value : numbers) { //Цикл проходит через каждый элемент массива numbers и на каждой итерации присваивает текущий элемент переменной value.
            //Тип переменной value — int, так как массив numbers содержит целые числа.
            //Этот цикл является удобным способом перебора всех элементов массива без необходимости отслеживать индексы
            sum += value; //Используется цикл for-each, который проходит по каждому элементу массива (value), и добавляет его значение к переменной sum.
        }
        double numberss = sum / numbers.length; //Вычисляется среднее арифметическое массива.
        // Для этого общая сумма всех элементов делится на количество элементов в массиве (array.length = 100).
        System.out.println("\nОтсортированный массив:"); //строка с текстом /н отвечает за начинания новой строки
        for (int i = 0; i < numbers.length; i++) {
            System.out.printf("%-4d", numbers[i]); // Выводим число с 4 знаками после запятой и отступом в 10 символов
            if ((i + 1) % 10 == 0) {
                System.out.println(); // Переход на новую строку после каждых 10 чисел
            }
        }


        System.out.println("\nСреднее арифметическое: " + numberss); //Выводится строка с текстом "Среднее арифметическое" и значением переменной average, которая содержит среднее арифметическое массива.
    }
}
